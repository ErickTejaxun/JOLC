#JOLC Compiladores 2 USAC 2021
println("--------------Sumas------------------");
println(2 + 3.3);
println(2.3 + 8);
println(1.2 + 5.4);
println(2+3);


println("--------------Restas------------------");
println(2 - 3.3 );
println(2.3 - 8 );
println(1.2 - 5.4 );
println(2-3 );


#JOLC Compiladores 2 USAC 2021
println("--------------Literales------------------");
println(10);
println(10.3);
println(10.3333333333333333);
println(nothing);
println(true);
println(false);
println(nothing);
println('3333433');
println(-3);
println(23+6.66+66);


#Multiplicacion
#JOLC Compiladores 2 USAC 2021
println("--------------Multiplicacion------------------");
println(-10+333+10);
println("Hola" * "Mundo");
println(2*3.3);
println(2.3*8);
println(1.2*5.4);
println(2*3);

#Division
println("--------------Division------------------");
println(2/3.3);
println(2.3/8);
println(1.2/5.4);
println(6/4);

println("--------------Potencia------------------");
#Potencia
println(2 ^ 3.5);
println(2.3 ^ 8);
println(1.2 ^ 5.4);
println(6 ^ 2);
println("Hola perros"^5);


#Modulo
println("--------------Modulo------------------");
println(2%3.5);
println(2.3%8);
println(1.0%5.0);
println(6%3);


println("--Uperacase and lowercase");
println(uppercase("hola")^3);
println(lowercase("HOLA")^3);
println(uppercase("hola")* lowercase("HOLA"));
println(lowercase("HOLA")* uppercase("hola"));

## Logaritmos
println(log10(100));
println(log(2,4));
println(sin(45));
println(cos(45));
println(tan(45));
println(sqrt(25));
println(200>30);
println(330<330);
println(330<=330);
println(330>=330);

println(false || false);
println(false || true);
println(true || false);
println(true || true);

println(false && false);
println(false && true);
println(true && false);
println(true && true);

println(! true);
println(! false);

#JOLC Compiladores 2 USAC 2021
print(30#= comantario de muchas lineas
  
  =# *3);

println("Hola");

#JOLC Compiladores 2 USAC 2021
println("Hola mundo 3444 $(232)");

#JOLC Compiladores 2 USAC 2021
println("Total : $(4*2). Fin Factura");
println("Total : $(4*2+232*3). Fin Factura $(3*3)", " Hola mundo"^3);
#JOLC Compiladores 2 USAC 2021
a = 4*3;
b = 30-3 :: Int64;
println("a*b = $(a*b)");

a = 4*3;
b = 30-3 :: Int64;
c = 3 :: Int64;
println("a*b = $(a*b) c= $(c)");

x = (3*5)::Int64; # Correcto
str = "Saludo"::Int64; # ERROR: expected Int64, got String
var1 = true::String; # ERROR: expected String, got Bool
var = 1234

#JOLC Compiladores 2 USAC 2021
a = 10;
println("Hola perros $(4/4-23*-1)---$(3*a)"^3, "x"^a , a-3*a);

#JOLC Compiladores 2 USAC 2021
println("Hola mundo 3444 $(232)");

#JOLC Compiladores 2 USAC 2021
println("Total : $(4*2). Fin Factura");
println("Total : $(4*2+232*3). Fin Factura $(3*3)", " Hola mundo"^3);
#JOLC Compiladores 2 USAC 2021
a = 4*3;
b = 30-3 :: Int64;
println("a*b = $(a*b)");

a = 4*3;
b = 30-3 :: Int64;
c = 3.33 :: Int64;
println("a*b = $(a*b) c= $(c)");


x = (3*5)::Int64; # Correcto
str = "Saludo"::Int64; # ERROR: expected Int64, got String
var1 = true::String; # ERROR: expected String, got Bool
var = 1234;


x = 8;
if x == 8
var1 = (x + 8) :: Int64;
println(sqrt(var1));
elseif x < 8
var1 = (x / 3) :: Float64;
println(sin(var1));
else
println("Error");
end;
  

for i in "Hola perros"
  println(i, "Iteracion");
end;